//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------



namespace PlanningBudget.Windows
{
    public partial class App : global::Windows.UI.Xaml.Markup.IXamlMetadataProvider
    {
        private global::PlanningBudget.Windows.PlanningBudget_Windows_XamlTypeInfo.XamlTypeInfoProvider _provider;

        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(global::System.Type type)
        {
            if(_provider == null)
            {
                _provider = new global::PlanningBudget.Windows.PlanningBudget_Windows_XamlTypeInfo.XamlTypeInfoProvider();
            }
            return _provider.GetXamlTypeByType(type);
        }

        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(string fullName)
        {
            if(_provider == null)
            {
                _provider = new global::PlanningBudget.Windows.PlanningBudget_Windows_XamlTypeInfo.XamlTypeInfoProvider();
            }
            return _provider.GetXamlTypeByName(fullName);
        }

        public global::Windows.UI.Xaml.Markup.XmlnsDefinition[] GetXmlnsDefinitions()
        {
            return new global::Windows.UI.Xaml.Markup.XmlnsDefinition[0];
        }
    }
}

namespace PlanningBudget.Windows.PlanningBudget_Windows_XamlTypeInfo
{
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks", "4.0.0.0")]    
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal partial class XamlTypeInfoProvider
    {
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlTypeByType(global::System.Type type)
        {
            global::Windows.UI.Xaml.Markup.IXamlType xamlType;
            if (_xamlTypeCacheByType.TryGetValue(type, out xamlType))
            {
                return xamlType;
            }
            int typeIndex = LookupTypeIndexByType(type);
            if(typeIndex != -1)
            {
                xamlType = CreateXamlType(typeIndex);
            }
            if (xamlType != null)
            {
                _xamlTypeCacheByName.Add(xamlType.FullName, xamlType);
                _xamlTypeCacheByType.Add(xamlType.UnderlyingType, xamlType);
            }
            return xamlType;
        }

        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlTypeByName(string typeName)
        {
            if (string.IsNullOrEmpty(typeName))
            {
                return null;
            }
            global::Windows.UI.Xaml.Markup.IXamlType xamlType;
            if (_xamlTypeCacheByName.TryGetValue(typeName, out xamlType))
            {
                return xamlType;
            }
            int typeIndex = LookupTypeIndexByName(typeName);
            if(typeIndex != -1)
            {
                xamlType = CreateXamlType(typeIndex);
            }
            if (xamlType != null)
            {
                _xamlTypeCacheByName.Add(xamlType.FullName, xamlType);
                _xamlTypeCacheByType.Add(xamlType.UnderlyingType, xamlType);
            }
            return xamlType;
        }

        public global::Windows.UI.Xaml.Markup.IXamlMember GetMemberByLongName(string longMemberName)
        {
            if (string.IsNullOrEmpty(longMemberName))
            {
                return null;
            }
            global::Windows.UI.Xaml.Markup.IXamlMember xamlMember;
            if (_xamlMembers.TryGetValue(longMemberName, out xamlMember))
            {
                return xamlMember;
            }
            xamlMember = CreateXamlMember(longMemberName);
            if (xamlMember != null)
            {
                _xamlMembers.Add(longMemberName, xamlMember);
            }
            return xamlMember;
        }

        global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlType>
                _xamlTypeCacheByName = new global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlType>();

        global::System.Collections.Generic.Dictionary<global::System.Type, global::Windows.UI.Xaml.Markup.IXamlType>
                _xamlTypeCacheByType = new global::System.Collections.Generic.Dictionary<global::System.Type, global::Windows.UI.Xaml.Markup.IXamlType>();

        global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlMember>
                _xamlMembers = new global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlMember>();

        string[] _typeNameTable = null;
        global::System.Type[] _typeTable = null;

        private void InitTypeTables()
        {
            _typeNameTable = new string[59];
            _typeNameTable[0] = "PlanningBudget.Windows.ViewModel.ViewModelLocator";
            _typeNameTable[1] = "Object";
            _typeNameTable[2] = "PlanningBudget.ViewModels.HomeView.HomeViewModel";
            _typeNameTable[3] = "GalaSoft.MvvmLight.ViewModelBase";
            _typeNameTable[4] = "GalaSoft.MvvmLight.ObservableObject";
            _typeNameTable[5] = "PlanningBudget.ViewModels.AddTransactionViewModel";
            _typeNameTable[6] = "PlanningBudget.ViewModels.EditCategoryViewModel";
            _typeNameTable[7] = "PlanningBudget.ViewModels.CategoryViewModel";
            _typeNameTable[8] = "PlanningBudget.ViewModels.TransactionListViewModel";
            _typeNameTable[9] = "PlanningBudget.ViewModels.ProfileViewModel";
            _typeNameTable[10] = "PlanningBudget.ViewModels.AddAccountViewModel";
            _typeNameTable[11] = "PlanningBudget.ViewModels.AddCategoryViewModel";
            _typeNameTable[12] = "PlanningBudget.ViewModels.AddExpenseViewModel";
            _typeNameTable[13] = "PlanningBudget.ViewModels.AddIncomeViewModel";
            _typeNameTable[14] = "PlanningBudget.Windows.Views.BindablePage";
            _typeNameTable[15] = "Windows.UI.Xaml.Controls.Page";
            _typeNameTable[16] = "Windows.UI.Xaml.Controls.UserControl";
            _typeNameTable[17] = "PlanningBudget.Windows.Views.Controls.HeaderControl";
            _typeNameTable[18] = "Windows.UI.Xaml.Controls.Control";
            _typeNameTable[19] = "String";
            _typeNameTable[20] = "System.Windows.Input.ICommand";
            _typeNameTable[21] = "PlanningBudget.Windows.Views.AddExpenseView";
            _typeNameTable[22] = "PlanningBudget.Windows.Views.Controls.MyDatePicker";
            _typeNameTable[23] = "PlanningBudget.Windows.Views.AddIncomeView";
            _typeNameTable[24] = "PlanningBudget.Windows.Views.Controls.EditProfile";
            _typeNameTable[25] = "PlanningBudget.Windows.Views.Controls.CategoryItemControl";
            _typeNameTable[26] = "Windows.UI.Color";
            _typeNameTable[27] = "System.ValueType";
            _typeNameTable[28] = "Windows.UI.Xaml.Media.SolidColorBrush";
            _typeNameTable[29] = "Boolean";
            _typeNameTable[30] = "Windows.UI.Xaml.Visibility";
            _typeNameTable[31] = "PlanningBudget.Windows.Views.Controls.EditCategoryControl";
            _typeNameTable[32] = "System.Collections.ObjectModel.ObservableCollection`1<String>";
            _typeNameTable[33] = "System.Collections.ObjectModel.Collection`1<String>";
            _typeNameTable[34] = "System.Collections.ObjectModel.ObservableCollection`1<Windows.UI.Xaml.Media.SolidColorBrush>";
            _typeNameTable[35] = "System.Collections.ObjectModel.Collection`1<Windows.UI.Xaml.Media.SolidColorBrush>";
            _typeNameTable[36] = "Int32";
            _typeNameTable[37] = "PlanningBudget.Windows.Views.AddAccountView";
            _typeNameTable[38] = "PlanningBudget.Windows.Views.Controls.ProfileTileControl";
            _typeNameTable[39] = "Microsoft.Xaml.Interactivity.Interaction";
            _typeNameTable[40] = "Microsoft.Xaml.Interactivity.BehaviorCollection";
            _typeNameTable[41] = "Windows.UI.Xaml.DependencyObjectCollection";
            _typeNameTable[42] = "Windows.UI.Xaml.DependencyObject";
            _typeNameTable[43] = "Microsoft.Xaml.Interactions.Core.DataTriggerBehavior";
            _typeNameTable[44] = "Microsoft.Xaml.Interactivity.ActionCollection";
            _typeNameTable[45] = "Microsoft.Xaml.Interactions.Core.ComparisonConditionType";
            _typeNameTable[46] = "System.Enum";
            _typeNameTable[47] = "PlanningBudget.Windows.Views.CloseFlyoutAction";
            _typeNameTable[48] = "PlanningBudget.Windows.Views.ExtendedGridView";
            _typeNameTable[49] = "Windows.UI.Xaml.Controls.GridView";
            _typeNameTable[50] = "Windows.UI.Xaml.Controls.ItemsControl";
            _typeNameTable[51] = "PlanningBudget.Windows.Views.ItemClickCommand";
            _typeNameTable[52] = "PlanningBudget.Windows.Views.ProfilesView";
            _typeNameTable[53] = "PlanningBudget.Windows.TransactionListView";
            _typeNameTable[54] = "PlanningBudget.Windows.Views.AddCategoryView";
            _typeNameTable[55] = "PlanningBudget.Windows.Views.DateTimeToDateTimeOffsetConverter";
            _typeNameTable[56] = "PlanningBudget.Windows.Views.AddTransactionView";
            _typeNameTable[57] = "PlanningBudget.Windows.Views.EditCategoryView";
            _typeNameTable[58] = "PlanningBudget.Windows.Views.HomeView";

            _typeTable = new global::System.Type[59];
            _typeTable[0] = typeof(global::PlanningBudget.Windows.ViewModel.ViewModelLocator);
            _typeTable[1] = typeof(global::System.Object);
            _typeTable[2] = typeof(global::PlanningBudget.ViewModels.HomeView.HomeViewModel);
            _typeTable[3] = typeof(global::GalaSoft.MvvmLight.ViewModelBase);
            _typeTable[4] = typeof(global::GalaSoft.MvvmLight.ObservableObject);
            _typeTable[5] = typeof(global::PlanningBudget.ViewModels.AddTransactionViewModel);
            _typeTable[6] = typeof(global::PlanningBudget.ViewModels.EditCategoryViewModel);
            _typeTable[7] = typeof(global::PlanningBudget.ViewModels.CategoryViewModel);
            _typeTable[8] = typeof(global::PlanningBudget.ViewModels.TransactionListViewModel);
            _typeTable[9] = typeof(global::PlanningBudget.ViewModels.ProfileViewModel);
            _typeTable[10] = typeof(global::PlanningBudget.ViewModels.AddAccountViewModel);
            _typeTable[11] = typeof(global::PlanningBudget.ViewModels.AddCategoryViewModel);
            _typeTable[12] = typeof(global::PlanningBudget.ViewModels.AddExpenseViewModel);
            _typeTable[13] = typeof(global::PlanningBudget.ViewModels.AddIncomeViewModel);
            _typeTable[14] = typeof(global::PlanningBudget.Windows.Views.BindablePage);
            _typeTable[15] = typeof(global::Windows.UI.Xaml.Controls.Page);
            _typeTable[16] = typeof(global::Windows.UI.Xaml.Controls.UserControl);
            _typeTable[17] = typeof(global::PlanningBudget.Windows.Views.Controls.HeaderControl);
            _typeTable[18] = typeof(global::Windows.UI.Xaml.Controls.Control);
            _typeTable[19] = typeof(global::System.String);
            _typeTable[20] = typeof(global::System.Windows.Input.ICommand);
            _typeTable[21] = typeof(global::PlanningBudget.Windows.Views.AddExpenseView);
            _typeTable[22] = typeof(global::PlanningBudget.Windows.Views.Controls.MyDatePicker);
            _typeTable[23] = typeof(global::PlanningBudget.Windows.Views.AddIncomeView);
            _typeTable[24] = typeof(global::PlanningBudget.Windows.Views.Controls.EditProfile);
            _typeTable[25] = typeof(global::PlanningBudget.Windows.Views.Controls.CategoryItemControl);
            _typeTable[26] = typeof(global::Windows.UI.Color);
            _typeTable[27] = typeof(global::System.ValueType);
            _typeTable[28] = typeof(global::Windows.UI.Xaml.Media.SolidColorBrush);
            _typeTable[29] = typeof(global::System.Boolean);
            _typeTable[30] = typeof(global::Windows.UI.Xaml.Visibility);
            _typeTable[31] = typeof(global::PlanningBudget.Windows.Views.Controls.EditCategoryControl);
            _typeTable[32] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::System.String>);
            _typeTable[33] = typeof(global::System.Collections.ObjectModel.Collection<global::System.String>);
            _typeTable[34] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::Windows.UI.Xaml.Media.SolidColorBrush>);
            _typeTable[35] = typeof(global::System.Collections.ObjectModel.Collection<global::Windows.UI.Xaml.Media.SolidColorBrush>);
            _typeTable[36] = typeof(global::System.Int32);
            _typeTable[37] = typeof(global::PlanningBudget.Windows.Views.AddAccountView);
            _typeTable[38] = typeof(global::PlanningBudget.Windows.Views.Controls.ProfileTileControl);
            _typeTable[39] = typeof(global::Microsoft.Xaml.Interactivity.Interaction);
            _typeTable[40] = typeof(global::Microsoft.Xaml.Interactivity.BehaviorCollection);
            _typeTable[41] = typeof(global::Windows.UI.Xaml.DependencyObjectCollection);
            _typeTable[42] = typeof(global::Windows.UI.Xaml.DependencyObject);
            _typeTable[43] = typeof(global::Microsoft.Xaml.Interactions.Core.DataTriggerBehavior);
            _typeTable[44] = typeof(global::Microsoft.Xaml.Interactivity.ActionCollection);
            _typeTable[45] = typeof(global::Microsoft.Xaml.Interactions.Core.ComparisonConditionType);
            _typeTable[46] = typeof(global::System.Enum);
            _typeTable[47] = typeof(global::PlanningBudget.Windows.Views.CloseFlyoutAction);
            _typeTable[48] = typeof(global::PlanningBudget.Windows.Views.ExtendedGridView);
            _typeTable[49] = typeof(global::Windows.UI.Xaml.Controls.GridView);
            _typeTable[50] = typeof(global::Windows.UI.Xaml.Controls.ItemsControl);
            _typeTable[51] = typeof(global::PlanningBudget.Windows.Views.ItemClickCommand);
            _typeTable[52] = typeof(global::PlanningBudget.Windows.Views.ProfilesView);
            _typeTable[53] = typeof(global::PlanningBudget.Windows.TransactionListView);
            _typeTable[54] = typeof(global::PlanningBudget.Windows.Views.AddCategoryView);
            _typeTable[55] = typeof(global::PlanningBudget.Windows.Views.DateTimeToDateTimeOffsetConverter);
            _typeTable[56] = typeof(global::PlanningBudget.Windows.Views.AddTransactionView);
            _typeTable[57] = typeof(global::PlanningBudget.Windows.Views.EditCategoryView);
            _typeTable[58] = typeof(global::PlanningBudget.Windows.Views.HomeView);
        }

        private int LookupTypeIndexByName(string typeName)
        {
            if (_typeNameTable == null)
            {
                InitTypeTables();
            }
            for (int i=0; i<_typeNameTable.Length; i++)
            {
                if(0 == string.CompareOrdinal(_typeNameTable[i], typeName))
                {
                    return i;
                }
            }
            return -1;
        }

        private int LookupTypeIndexByType(global::System.Type type)
        {
            if (_typeTable == null)
            {
                InitTypeTables();
            }
            for(int i=0; i<_typeTable.Length; i++)
            {
                if(type == _typeTable[i])
                {
                    return i;
                }
            }
            return -1;
        }

        private object Activate_0_ViewModelLocator() { return new global::PlanningBudget.Windows.ViewModel.ViewModelLocator(); }
        private object Activate_4_ObservableObject() { return new global::GalaSoft.MvvmLight.ObservableObject(); }
        private object Activate_14_BindablePage() { return new global::PlanningBudget.Windows.Views.BindablePage(); }
        private object Activate_17_HeaderControl() { return new global::PlanningBudget.Windows.Views.Controls.HeaderControl(); }
        private object Activate_21_AddExpenseView() { return new global::PlanningBudget.Windows.Views.AddExpenseView(); }
        private object Activate_22_MyDatePicker() { return new global::PlanningBudget.Windows.Views.Controls.MyDatePicker(); }
        private object Activate_23_AddIncomeView() { return new global::PlanningBudget.Windows.Views.AddIncomeView(); }
        private object Activate_24_EditProfile() { return new global::PlanningBudget.Windows.Views.Controls.EditProfile(); }
        private object Activate_25_CategoryItemControl() { return new global::PlanningBudget.Windows.Views.Controls.CategoryItemControl(); }
        private object Activate_31_EditCategoryControl() { return new global::PlanningBudget.Windows.Views.Controls.EditCategoryControl(); }
        private object Activate_32_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::System.String>(); }
        private object Activate_33_Collection() { return new global::System.Collections.ObjectModel.Collection<global::System.String>(); }
        private object Activate_34_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::Windows.UI.Xaml.Media.SolidColorBrush>(); }
        private object Activate_35_Collection() { return new global::System.Collections.ObjectModel.Collection<global::Windows.UI.Xaml.Media.SolidColorBrush>(); }
        private object Activate_37_AddAccountView() { return new global::PlanningBudget.Windows.Views.AddAccountView(); }
        private object Activate_38_ProfileTileControl() { return new global::PlanningBudget.Windows.Views.Controls.ProfileTileControl(); }
        private object Activate_40_BehaviorCollection() { return new global::Microsoft.Xaml.Interactivity.BehaviorCollection(); }
        private object Activate_43_DataTriggerBehavior() { return new global::Microsoft.Xaml.Interactions.Core.DataTriggerBehavior(); }
        private object Activate_44_ActionCollection() { return new global::Microsoft.Xaml.Interactivity.ActionCollection(); }
        private object Activate_47_CloseFlyoutAction() { return new global::PlanningBudget.Windows.Views.CloseFlyoutAction(); }
        private object Activate_48_ExtendedGridView() { return new global::PlanningBudget.Windows.Views.ExtendedGridView(); }
        private object Activate_52_ProfilesView() { return new global::PlanningBudget.Windows.Views.ProfilesView(); }
        private object Activate_53_TransactionListView() { return new global::PlanningBudget.Windows.TransactionListView(); }
        private object Activate_54_AddCategoryView() { return new global::PlanningBudget.Windows.Views.AddCategoryView(); }
        private object Activate_55_DateTimeToDateTimeOffsetConverter() { return new global::PlanningBudget.Windows.Views.DateTimeToDateTimeOffsetConverter(); }
        private object Activate_56_AddTransactionView() { return new global::PlanningBudget.Windows.Views.AddTransactionView(); }
        private object Activate_57_EditCategoryView() { return new global::PlanningBudget.Windows.Views.EditCategoryView(); }
        private object Activate_58_HomeView() { return new global::PlanningBudget.Windows.Views.HomeView(); }
        private void VectorAdd_32_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::System.String>)instance;
            var newItem = (global::System.String)item;
            collection.Add(newItem);
        }
        private void VectorAdd_33_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::System.String>)instance;
            var newItem = (global::System.String)item;
            collection.Add(newItem);
        }
        private void VectorAdd_34_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Windows.UI.Xaml.Media.SolidColorBrush>)instance;
            var newItem = (global::Windows.UI.Xaml.Media.SolidColorBrush)item;
            collection.Add(newItem);
        }
        private void VectorAdd_35_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Windows.UI.Xaml.Media.SolidColorBrush>)instance;
            var newItem = (global::Windows.UI.Xaml.Media.SolidColorBrush)item;
            collection.Add(newItem);
        }
        private void VectorAdd_40_BehaviorCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Windows.UI.Xaml.DependencyObject>)instance;
            var newItem = (global::Windows.UI.Xaml.DependencyObject)item;
            collection.Add(newItem);
        }
        private void VectorAdd_44_ActionCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Windows.UI.Xaml.DependencyObject>)instance;
            var newItem = (global::Windows.UI.Xaml.DependencyObject)item;
            collection.Add(newItem);
        }

        private global::Windows.UI.Xaml.Markup.IXamlType CreateXamlType(int typeIndex)
        {
            global::PlanningBudget.Windows.PlanningBudget_Windows_XamlTypeInfo.XamlSystemBaseType xamlType = null;
            global::PlanningBudget.Windows.PlanningBudget_Windows_XamlTypeInfo.XamlUserType userType;
            string typeName = _typeNameTable[typeIndex];
            global::System.Type type = _typeTable[typeIndex];

            switch (typeIndex)
            {

            case 0:   //  PlanningBudget.Windows.ViewModel.ViewModelLocator
                userType = new global::PlanningBudget.Windows.PlanningBudget_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_0_ViewModelLocator;
                userType.AddMemberName("Home");
                userType.AddMemberName("AddTransaction");
                userType.AddMemberName("EditCategory");
                userType.AddMemberName("TransactionList");
                userType.AddMemberName("AddProfile");
                userType.AddMemberName("AddAccount");
                userType.AddMemberName("AddExpense");
                userType.AddMemberName("AddIncome");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 1:   //  Object
                xamlType = new global::PlanningBudget.Windows.PlanningBudget_Windows_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 2:   //  PlanningBudget.ViewModels.HomeView.HomeViewModel
                userType = new global::PlanningBudget.Windows.PlanningBudget_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("GalaSoft.MvvmLight.ViewModelBase"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 3:   //  GalaSoft.MvvmLight.ViewModelBase
                userType = new global::PlanningBudget.Windows.PlanningBudget_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("GalaSoft.MvvmLight.ObservableObject"));
                xamlType = userType;
                break;

            case 4:   //  GalaSoft.MvvmLight.ObservableObject
                userType = new global::PlanningBudget.Windows.PlanningBudget_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_4_ObservableObject;
                xamlType = userType;
                break;

            case 5:   //  PlanningBudget.ViewModels.AddTransactionViewModel
                userType = new global::PlanningBudget.Windows.PlanningBudget_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("GalaSoft.MvvmLight.ViewModelBase"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 6:   //  PlanningBudget.ViewModels.EditCategoryViewModel
                userType = new global::PlanningBudget.Windows.PlanningBudget_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("PlanningBudget.ViewModels.CategoryViewModel"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 7:   //  PlanningBudget.ViewModels.CategoryViewModel
                userType = new global::PlanningBudget.Windows.PlanningBudget_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("GalaSoft.MvvmLight.ViewModelBase"));
                xamlType = userType;
                break;

            case 8:   //  PlanningBudget.ViewModels.TransactionListViewModel
                userType = new global::PlanningBudget.Windows.PlanningBudget_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("GalaSoft.MvvmLight.ViewModelBase"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 9:   //  PlanningBudget.ViewModels.ProfileViewModel
                userType = new global::PlanningBudget.Windows.PlanningBudget_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("GalaSoft.MvvmLight.ViewModelBase"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 10:   //  PlanningBudget.ViewModels.AddAccountViewModel
                userType = new global::PlanningBudget.Windows.PlanningBudget_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("PlanningBudget.ViewModels.AddCategoryViewModel"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 11:   //  PlanningBudget.ViewModels.AddCategoryViewModel
                userType = new global::PlanningBudget.Windows.PlanningBudget_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("GalaSoft.MvvmLight.ViewModelBase"));
                xamlType = userType;
                break;

            case 12:   //  PlanningBudget.ViewModels.AddExpenseViewModel
                userType = new global::PlanningBudget.Windows.PlanningBudget_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("PlanningBudget.ViewModels.AddCategoryViewModel"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 13:   //  PlanningBudget.ViewModels.AddIncomeViewModel
                userType = new global::PlanningBudget.Windows.PlanningBudget_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("PlanningBudget.ViewModels.AddCategoryViewModel"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 14:   //  PlanningBudget.Windows.Views.BindablePage
                userType = new global::PlanningBudget.Windows.PlanningBudget_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_14_BindablePage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 15:   //  Windows.UI.Xaml.Controls.Page
                xamlType = new global::PlanningBudget.Windows.PlanningBudget_Windows_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 16:   //  Windows.UI.Xaml.Controls.UserControl
                xamlType = new global::PlanningBudget.Windows.PlanningBudget_Windows_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 17:   //  PlanningBudget.Windows.Views.Controls.HeaderControl
                userType = new global::PlanningBudget.Windows.PlanningBudget_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Control"));
                userType.Activator = Activate_17_HeaderControl;
                userType.AddMemberName("Text");
                userType.AddMemberName("BackCommand");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 18:   //  Windows.UI.Xaml.Controls.Control
                xamlType = new global::PlanningBudget.Windows.PlanningBudget_Windows_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 19:   //  String
                xamlType = new global::PlanningBudget.Windows.PlanningBudget_Windows_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 20:   //  System.Windows.Input.ICommand
                userType = new global::PlanningBudget.Windows.PlanningBudget_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 21:   //  PlanningBudget.Windows.Views.AddExpenseView
                userType = new global::PlanningBudget.Windows.PlanningBudget_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("PlanningBudget.Windows.Views.BindablePage"));
                userType.Activator = Activate_21_AddExpenseView;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 22:   //  PlanningBudget.Windows.Views.Controls.MyDatePicker
                userType = new global::PlanningBudget.Windows.PlanningBudget_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.UserControl"));
                userType.Activator = Activate_22_MyDatePicker;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 23:   //  PlanningBudget.Windows.Views.AddIncomeView
                userType = new global::PlanningBudget.Windows.PlanningBudget_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("PlanningBudget.Windows.Views.BindablePage"));
                userType.Activator = Activate_23_AddIncomeView;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 24:   //  PlanningBudget.Windows.Views.Controls.EditProfile
                userType = new global::PlanningBudget.Windows.PlanningBudget_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.UserControl"));
                userType.Activator = Activate_24_EditProfile;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 25:   //  PlanningBudget.Windows.Views.Controls.CategoryItemControl
                userType = new global::PlanningBudget.Windows.PlanningBudget_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Control"));
                userType.Activator = Activate_25_CategoryItemControl;
                userType.AddMemberName("Color");
                userType.AddMemberName("BorderColor");
                userType.AddMemberName("Overrun");
                userType.AddMemberName("Label");
                userType.AddMemberName("Percentage");
                userType.AddMemberName("Icon");
                userType.AddMemberName("Value");
                userType.AddMemberName("SecondaryValue");
                userType.AddMemberName("IsAddIcon");
                userType.AddMemberName("AddIconVisibility");
                userType.AddMemberName("GeneralIconVisibility");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 26:   //  Windows.UI.Color
                userType = new global::PlanningBudget.Windows.PlanningBudget_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 27:   //  System.ValueType
                userType = new global::PlanningBudget.Windows.PlanningBudget_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                xamlType = userType;
                break;

            case 28:   //  Windows.UI.Xaml.Media.SolidColorBrush
                xamlType = new global::PlanningBudget.Windows.PlanningBudget_Windows_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 29:   //  Boolean
                xamlType = new global::PlanningBudget.Windows.PlanningBudget_Windows_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 30:   //  Windows.UI.Xaml.Visibility
                xamlType = new global::PlanningBudget.Windows.PlanningBudget_Windows_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 31:   //  PlanningBudget.Windows.Views.Controls.EditCategoryControl
                userType = new global::PlanningBudget.Windows.PlanningBudget_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Control"));
                userType.Activator = Activate_31_EditCategoryControl;
                userType.AddMemberName("CategoryName");
                userType.AddMemberName("Type");
                userType.AddMemberName("Types");
                userType.AddMemberName("IconColor");
                userType.AddMemberName("IconColours");
                userType.AddMemberName("Icon");
                userType.AddMemberName("Icons");
                userType.AddMemberName("SaveAndReturnCommand");
                userType.AddMemberName("SaveAndContinueCommand");
                userType.AddMemberName("IsAdding");
                userType.AddMemberName("ShowSaveAndAdd");
                userType.AddMemberName("SaveButtonColumnSpan");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 32:   //  System.Collections.ObjectModel.ObservableCollection`1<String>
                userType = new global::PlanningBudget.Windows.PlanningBudget_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<String>"));
                userType.CollectionAdd = VectorAdd_32_ObservableCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 33:   //  System.Collections.ObjectModel.Collection`1<String>
                userType = new global::PlanningBudget.Windows.PlanningBudget_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_33_Collection;
                userType.CollectionAdd = VectorAdd_33_Collection;
                xamlType = userType;
                break;

            case 34:   //  System.Collections.ObjectModel.ObservableCollection`1<Windows.UI.Xaml.Media.SolidColorBrush>
                userType = new global::PlanningBudget.Windows.PlanningBudget_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<Windows.UI.Xaml.Media.SolidColorBrush>"));
                userType.CollectionAdd = VectorAdd_34_ObservableCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 35:   //  System.Collections.ObjectModel.Collection`1<Windows.UI.Xaml.Media.SolidColorBrush>
                userType = new global::PlanningBudget.Windows.PlanningBudget_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_35_Collection;
                userType.CollectionAdd = VectorAdd_35_Collection;
                xamlType = userType;
                break;

            case 36:   //  Int32
                xamlType = new global::PlanningBudget.Windows.PlanningBudget_Windows_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 37:   //  PlanningBudget.Windows.Views.AddAccountView
                userType = new global::PlanningBudget.Windows.PlanningBudget_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("PlanningBudget.Windows.Views.BindablePage"));
                userType.Activator = Activate_37_AddAccountView;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 38:   //  PlanningBudget.Windows.Views.Controls.ProfileTileControl
                userType = new global::PlanningBudget.Windows.PlanningBudget_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.UserControl"));
                userType.Activator = Activate_38_ProfileTileControl;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 39:   //  Microsoft.Xaml.Interactivity.Interaction
                userType = new global::PlanningBudget.Windows.PlanningBudget_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.AddMemberName("Behaviors");
                xamlType = userType;
                break;

            case 40:   //  Microsoft.Xaml.Interactivity.BehaviorCollection
                userType = new global::PlanningBudget.Windows.PlanningBudget_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObjectCollection"));
                userType.CollectionAdd = VectorAdd_40_BehaviorCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 41:   //  Windows.UI.Xaml.DependencyObjectCollection
                xamlType = new global::PlanningBudget.Windows.PlanningBudget_Windows_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 42:   //  Windows.UI.Xaml.DependencyObject
                xamlType = new global::PlanningBudget.Windows.PlanningBudget_Windows_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 43:   //  Microsoft.Xaml.Interactions.Core.DataTriggerBehavior
                userType = new global::PlanningBudget.Windows.PlanningBudget_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObject"));
                userType.Activator = Activate_43_DataTriggerBehavior;
                userType.SetContentPropertyName("Microsoft.Xaml.Interactions.Core.DataTriggerBehavior.Actions");
                userType.AddMemberName("Actions");
                userType.AddMemberName("Binding");
                userType.AddMemberName("ComparisonCondition");
                userType.AddMemberName("Value");
                userType.AddMemberName("AssociatedObject");
                xamlType = userType;
                break;

            case 44:   //  Microsoft.Xaml.Interactivity.ActionCollection
                userType = new global::PlanningBudget.Windows.PlanningBudget_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObjectCollection"));
                userType.CollectionAdd = VectorAdd_44_ActionCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 45:   //  Microsoft.Xaml.Interactions.Core.ComparisonConditionType
                userType = new global::PlanningBudget.Windows.PlanningBudget_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Equal", global::Microsoft.Xaml.Interactions.Core.ComparisonConditionType.Equal);
                userType.AddEnumValue("NotEqual", global::Microsoft.Xaml.Interactions.Core.ComparisonConditionType.NotEqual);
                userType.AddEnumValue("LessThan", global::Microsoft.Xaml.Interactions.Core.ComparisonConditionType.LessThan);
                userType.AddEnumValue("LessThanOrEqual", global::Microsoft.Xaml.Interactions.Core.ComparisonConditionType.LessThanOrEqual);
                userType.AddEnumValue("GreaterThan", global::Microsoft.Xaml.Interactions.Core.ComparisonConditionType.GreaterThan);
                userType.AddEnumValue("GreaterThanOrEqual", global::Microsoft.Xaml.Interactions.Core.ComparisonConditionType.GreaterThanOrEqual);
                xamlType = userType;
                break;

            case 46:   //  System.Enum
                userType = new global::PlanningBudget.Windows.PlanningBudget_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                xamlType = userType;
                break;

            case 47:   //  PlanningBudget.Windows.Views.CloseFlyoutAction
                userType = new global::PlanningBudget.Windows.PlanningBudget_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObject"));
                userType.Activator = Activate_47_CloseFlyoutAction;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 48:   //  PlanningBudget.Windows.Views.ExtendedGridView
                userType = new global::PlanningBudget.Windows.PlanningBudget_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.GridView"));
                userType.Activator = Activate_48_ExtendedGridView;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 49:   //  Windows.UI.Xaml.Controls.GridView
                xamlType = new global::PlanningBudget.Windows.PlanningBudget_Windows_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 50:   //  Windows.UI.Xaml.Controls.ItemsControl
                xamlType = new global::PlanningBudget.Windows.PlanningBudget_Windows_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 51:   //  PlanningBudget.Windows.Views.ItemClickCommand
                userType = new global::PlanningBudget.Windows.PlanningBudget_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.AddMemberName("Command");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 52:   //  PlanningBudget.Windows.Views.ProfilesView
                userType = new global::PlanningBudget.Windows.PlanningBudget_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_52_ProfilesView;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 53:   //  PlanningBudget.Windows.TransactionListView
                userType = new global::PlanningBudget.Windows.PlanningBudget_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("PlanningBudget.Windows.Views.BindablePage"));
                userType.Activator = Activate_53_TransactionListView;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 54:   //  PlanningBudget.Windows.Views.AddCategoryView
                userType = new global::PlanningBudget.Windows.PlanningBudget_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_54_AddCategoryView;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 55:   //  PlanningBudget.Windows.Views.DateTimeToDateTimeOffsetConverter
                userType = new global::PlanningBudget.Windows.PlanningBudget_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_55_DateTimeToDateTimeOffsetConverter;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 56:   //  PlanningBudget.Windows.Views.AddTransactionView
                userType = new global::PlanningBudget.Windows.PlanningBudget_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_56_AddTransactionView;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 57:   //  PlanningBudget.Windows.Views.EditCategoryView
                userType = new global::PlanningBudget.Windows.PlanningBudget_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("PlanningBudget.Windows.Views.BindablePage"));
                userType.Activator = Activate_57_EditCategoryView;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 58:   //  PlanningBudget.Windows.Views.HomeView
                userType = new global::PlanningBudget.Windows.PlanningBudget_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_58_HomeView;
                userType.SetIsLocalType();
                xamlType = userType;
                break;
            }
            return xamlType;
        }


        private object get_0_ViewModelLocator_Home(object instance)
        {
            var that = (global::PlanningBudget.Windows.ViewModel.ViewModelLocator)instance;
            return that.Home;
        }
        private object get_1_ViewModelLocator_AddTransaction(object instance)
        {
            var that = (global::PlanningBudget.Windows.ViewModel.ViewModelLocator)instance;
            return that.AddTransaction;
        }
        private object get_2_ViewModelLocator_EditCategory(object instance)
        {
            var that = (global::PlanningBudget.Windows.ViewModel.ViewModelLocator)instance;
            return that.EditCategory;
        }
        private object get_3_ViewModelLocator_TransactionList(object instance)
        {
            var that = (global::PlanningBudget.Windows.ViewModel.ViewModelLocator)instance;
            return that.TransactionList;
        }
        private object get_4_ViewModelLocator_AddProfile(object instance)
        {
            var that = (global::PlanningBudget.Windows.ViewModel.ViewModelLocator)instance;
            return that.AddProfile;
        }
        private object get_5_ViewModelLocator_AddAccount(object instance)
        {
            var that = (global::PlanningBudget.Windows.ViewModel.ViewModelLocator)instance;
            return that.AddAccount;
        }
        private object get_6_ViewModelLocator_AddExpense(object instance)
        {
            var that = (global::PlanningBudget.Windows.ViewModel.ViewModelLocator)instance;
            return that.AddExpense;
        }
        private object get_7_ViewModelLocator_AddIncome(object instance)
        {
            var that = (global::PlanningBudget.Windows.ViewModel.ViewModelLocator)instance;
            return that.AddIncome;
        }
        private object get_8_HeaderControl_Text(object instance)
        {
            var that = (global::PlanningBudget.Windows.Views.Controls.HeaderControl)instance;
            return that.Text;
        }
        private void set_8_HeaderControl_Text(object instance, object Value)
        {
            var that = (global::PlanningBudget.Windows.Views.Controls.HeaderControl)instance;
            that.Text = (global::System.String)Value;
        }
        private object get_9_HeaderControl_BackCommand(object instance)
        {
            var that = (global::PlanningBudget.Windows.Views.Controls.HeaderControl)instance;
            return that.BackCommand;
        }
        private void set_9_HeaderControl_BackCommand(object instance, object Value)
        {
            var that = (global::PlanningBudget.Windows.Views.Controls.HeaderControl)instance;
            that.BackCommand = (global::System.Windows.Input.ICommand)Value;
        }
        private object get_10_CategoryItemControl_Color(object instance)
        {
            var that = (global::PlanningBudget.Windows.Views.Controls.CategoryItemControl)instance;
            return that.Color;
        }
        private void set_10_CategoryItemControl_Color(object instance, object Value)
        {
            var that = (global::PlanningBudget.Windows.Views.Controls.CategoryItemControl)instance;
            that.Color = (global::Windows.UI.Color)Value;
        }
        private object get_11_CategoryItemControl_BorderColor(object instance)
        {
            var that = (global::PlanningBudget.Windows.Views.Controls.CategoryItemControl)instance;
            return that.BorderColor;
        }
        private object get_12_CategoryItemControl_Overrun(object instance)
        {
            var that = (global::PlanningBudget.Windows.Views.Controls.CategoryItemControl)instance;
            return that.Overrun;
        }
        private void set_12_CategoryItemControl_Overrun(object instance, object Value)
        {
            var that = (global::PlanningBudget.Windows.Views.Controls.CategoryItemControl)instance;
            that.Overrun = (global::System.Boolean)Value;
        }
        private object get_13_CategoryItemControl_Label(object instance)
        {
            var that = (global::PlanningBudget.Windows.Views.Controls.CategoryItemControl)instance;
            return that.Label;
        }
        private void set_13_CategoryItemControl_Label(object instance, object Value)
        {
            var that = (global::PlanningBudget.Windows.Views.Controls.CategoryItemControl)instance;
            that.Label = (global::System.String)Value;
        }
        private object get_14_CategoryItemControl_Percentage(object instance)
        {
            var that = (global::PlanningBudget.Windows.Views.Controls.CategoryItemControl)instance;
            return that.Percentage;
        }
        private void set_14_CategoryItemControl_Percentage(object instance, object Value)
        {
            var that = (global::PlanningBudget.Windows.Views.Controls.CategoryItemControl)instance;
            that.Percentage = (global::System.String)Value;
        }
        private object get_15_CategoryItemControl_Icon(object instance)
        {
            var that = (global::PlanningBudget.Windows.Views.Controls.CategoryItemControl)instance;
            return that.Icon;
        }
        private void set_15_CategoryItemControl_Icon(object instance, object Value)
        {
            var that = (global::PlanningBudget.Windows.Views.Controls.CategoryItemControl)instance;
            that.Icon = (global::System.String)Value;
        }
        private object get_16_CategoryItemControl_Value(object instance)
        {
            var that = (global::PlanningBudget.Windows.Views.Controls.CategoryItemControl)instance;
            return that.Value;
        }
        private void set_16_CategoryItemControl_Value(object instance, object Value)
        {
            var that = (global::PlanningBudget.Windows.Views.Controls.CategoryItemControl)instance;
            that.Value = (global::System.String)Value;
        }
        private object get_17_CategoryItemControl_SecondaryValue(object instance)
        {
            var that = (global::PlanningBudget.Windows.Views.Controls.CategoryItemControl)instance;
            return that.SecondaryValue;
        }
        private void set_17_CategoryItemControl_SecondaryValue(object instance, object Value)
        {
            var that = (global::PlanningBudget.Windows.Views.Controls.CategoryItemControl)instance;
            that.SecondaryValue = (global::System.String)Value;
        }
        private object get_18_CategoryItemControl_IsAddIcon(object instance)
        {
            var that = (global::PlanningBudget.Windows.Views.Controls.CategoryItemControl)instance;
            return that.IsAddIcon;
        }
        private void set_18_CategoryItemControl_IsAddIcon(object instance, object Value)
        {
            var that = (global::PlanningBudget.Windows.Views.Controls.CategoryItemControl)instance;
            that.IsAddIcon = (global::System.Boolean)Value;
        }
        private object get_19_CategoryItemControl_AddIconVisibility(object instance)
        {
            var that = (global::PlanningBudget.Windows.Views.Controls.CategoryItemControl)instance;
            return that.AddIconVisibility;
        }
        private object get_20_CategoryItemControl_GeneralIconVisibility(object instance)
        {
            var that = (global::PlanningBudget.Windows.Views.Controls.CategoryItemControl)instance;
            return that.GeneralIconVisibility;
        }
        private object get_21_EditCategoryControl_CategoryName(object instance)
        {
            var that = (global::PlanningBudget.Windows.Views.Controls.EditCategoryControl)instance;
            return that.CategoryName;
        }
        private void set_21_EditCategoryControl_CategoryName(object instance, object Value)
        {
            var that = (global::PlanningBudget.Windows.Views.Controls.EditCategoryControl)instance;
            that.CategoryName = (global::System.String)Value;
        }
        private object get_22_EditCategoryControl_Type(object instance)
        {
            var that = (global::PlanningBudget.Windows.Views.Controls.EditCategoryControl)instance;
            return that.Type;
        }
        private void set_22_EditCategoryControl_Type(object instance, object Value)
        {
            var that = (global::PlanningBudget.Windows.Views.Controls.EditCategoryControl)instance;
            that.Type = (global::System.String)Value;
        }
        private object get_23_EditCategoryControl_Types(object instance)
        {
            var that = (global::PlanningBudget.Windows.Views.Controls.EditCategoryControl)instance;
            return that.Types;
        }
        private void set_23_EditCategoryControl_Types(object instance, object Value)
        {
            var that = (global::PlanningBudget.Windows.Views.Controls.EditCategoryControl)instance;
            that.Types = (global::System.Collections.ObjectModel.ObservableCollection<global::System.String>)Value;
        }
        private object get_24_EditCategoryControl_IconColor(object instance)
        {
            var that = (global::PlanningBudget.Windows.Views.Controls.EditCategoryControl)instance;
            return that.IconColor;
        }
        private void set_24_EditCategoryControl_IconColor(object instance, object Value)
        {
            var that = (global::PlanningBudget.Windows.Views.Controls.EditCategoryControl)instance;
            that.IconColor = (global::Windows.UI.Xaml.Media.SolidColorBrush)Value;
        }
        private object get_25_EditCategoryControl_IconColours(object instance)
        {
            var that = (global::PlanningBudget.Windows.Views.Controls.EditCategoryControl)instance;
            return that.IconColours;
        }
        private void set_25_EditCategoryControl_IconColours(object instance, object Value)
        {
            var that = (global::PlanningBudget.Windows.Views.Controls.EditCategoryControl)instance;
            that.IconColours = (global::System.Collections.ObjectModel.ObservableCollection<global::Windows.UI.Xaml.Media.SolidColorBrush>)Value;
        }
        private object get_26_EditCategoryControl_Icon(object instance)
        {
            var that = (global::PlanningBudget.Windows.Views.Controls.EditCategoryControl)instance;
            return that.Icon;
        }
        private void set_26_EditCategoryControl_Icon(object instance, object Value)
        {
            var that = (global::PlanningBudget.Windows.Views.Controls.EditCategoryControl)instance;
            that.Icon = (global::System.String)Value;
        }
        private object get_27_EditCategoryControl_Icons(object instance)
        {
            var that = (global::PlanningBudget.Windows.Views.Controls.EditCategoryControl)instance;
            return that.Icons;
        }
        private void set_27_EditCategoryControl_Icons(object instance, object Value)
        {
            var that = (global::PlanningBudget.Windows.Views.Controls.EditCategoryControl)instance;
            that.Icons = (global::System.Collections.ObjectModel.ObservableCollection<global::System.String>)Value;
        }
        private object get_28_EditCategoryControl_SaveAndReturnCommand(object instance)
        {
            var that = (global::PlanningBudget.Windows.Views.Controls.EditCategoryControl)instance;
            return that.SaveAndReturnCommand;
        }
        private void set_28_EditCategoryControl_SaveAndReturnCommand(object instance, object Value)
        {
            var that = (global::PlanningBudget.Windows.Views.Controls.EditCategoryControl)instance;
            that.SaveAndReturnCommand = (global::System.Windows.Input.ICommand)Value;
        }
        private object get_29_EditCategoryControl_SaveAndContinueCommand(object instance)
        {
            var that = (global::PlanningBudget.Windows.Views.Controls.EditCategoryControl)instance;
            return that.SaveAndContinueCommand;
        }
        private void set_29_EditCategoryControl_SaveAndContinueCommand(object instance, object Value)
        {
            var that = (global::PlanningBudget.Windows.Views.Controls.EditCategoryControl)instance;
            that.SaveAndContinueCommand = (global::System.Windows.Input.ICommand)Value;
        }
        private object get_30_EditCategoryControl_IsAdding(object instance)
        {
            var that = (global::PlanningBudget.Windows.Views.Controls.EditCategoryControl)instance;
            return that.IsAdding;
        }
        private void set_30_EditCategoryControl_IsAdding(object instance, object Value)
        {
            var that = (global::PlanningBudget.Windows.Views.Controls.EditCategoryControl)instance;
            that.IsAdding = (global::System.Boolean)Value;
        }
        private object get_31_EditCategoryControl_ShowSaveAndAdd(object instance)
        {
            var that = (global::PlanningBudget.Windows.Views.Controls.EditCategoryControl)instance;
            return that.ShowSaveAndAdd;
        }
        private object get_32_EditCategoryControl_SaveButtonColumnSpan(object instance)
        {
            var that = (global::PlanningBudget.Windows.Views.Controls.EditCategoryControl)instance;
            return that.SaveButtonColumnSpan;
        }
        private object get_33_Interaction_Behaviors(object instance)
        {
            return global::Microsoft.Xaml.Interactivity.Interaction.GetBehaviors((global::Windows.UI.Xaml.DependencyObject)instance);
        }
        private void set_33_Interaction_Behaviors(object instance, object Value)
        {
            global::Microsoft.Xaml.Interactivity.Interaction.SetBehaviors((global::Windows.UI.Xaml.DependencyObject)instance, (global::Microsoft.Xaml.Interactivity.BehaviorCollection)Value);
        }
        private object get_34_DataTriggerBehavior_Actions(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.DataTriggerBehavior)instance;
            return that.Actions;
        }
        private object get_35_DataTriggerBehavior_Binding(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.DataTriggerBehavior)instance;
            return that.Binding;
        }
        private void set_35_DataTriggerBehavior_Binding(object instance, object Value)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.DataTriggerBehavior)instance;
            that.Binding = (global::System.Object)Value;
        }
        private object get_36_DataTriggerBehavior_ComparisonCondition(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.DataTriggerBehavior)instance;
            return that.ComparisonCondition;
        }
        private void set_36_DataTriggerBehavior_ComparisonCondition(object instance, object Value)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.DataTriggerBehavior)instance;
            that.ComparisonCondition = (global::Microsoft.Xaml.Interactions.Core.ComparisonConditionType)Value;
        }
        private object get_37_DataTriggerBehavior_Value(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.DataTriggerBehavior)instance;
            return that.Value;
        }
        private void set_37_DataTriggerBehavior_Value(object instance, object Value)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.DataTriggerBehavior)instance;
            that.Value = (global::System.Object)Value;
        }
        private object get_38_DataTriggerBehavior_AssociatedObject(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.DataTriggerBehavior)instance;
            return that.AssociatedObject;
        }
        private object get_39_ItemClickCommand_Command(object instance)
        {
            return global::PlanningBudget.Windows.Views.ItemClickCommand.GetCommand((global::Windows.UI.Xaml.DependencyObject)instance);
        }
        private void set_39_ItemClickCommand_Command(object instance, object Value)
        {
            global::PlanningBudget.Windows.Views.ItemClickCommand.SetCommand((global::Windows.UI.Xaml.DependencyObject)instance, (global::System.Windows.Input.ICommand)Value);
        }

        private global::Windows.UI.Xaml.Markup.IXamlMember CreateXamlMember(string longMemberName)
        {
            global::PlanningBudget.Windows.PlanningBudget_Windows_XamlTypeInfo.XamlMember xamlMember = null;
            global::PlanningBudget.Windows.PlanningBudget_Windows_XamlTypeInfo.XamlUserType userType;

            switch (longMemberName)
            {
            case "PlanningBudget.Windows.ViewModel.ViewModelLocator.Home":
                userType = (global::PlanningBudget.Windows.PlanningBudget_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("PlanningBudget.Windows.ViewModel.ViewModelLocator");
                xamlMember = new global::PlanningBudget.Windows.PlanningBudget_Windows_XamlTypeInfo.XamlMember(this, "Home", "PlanningBudget.ViewModels.HomeView.HomeViewModel");
                xamlMember.Getter = get_0_ViewModelLocator_Home;
                xamlMember.SetIsReadOnly();
                break;
            case "PlanningBudget.Windows.ViewModel.ViewModelLocator.AddTransaction":
                userType = (global::PlanningBudget.Windows.PlanningBudget_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("PlanningBudget.Windows.ViewModel.ViewModelLocator");
                xamlMember = new global::PlanningBudget.Windows.PlanningBudget_Windows_XamlTypeInfo.XamlMember(this, "AddTransaction", "PlanningBudget.ViewModels.AddTransactionViewModel");
                xamlMember.Getter = get_1_ViewModelLocator_AddTransaction;
                xamlMember.SetIsReadOnly();
                break;
            case "PlanningBudget.Windows.ViewModel.ViewModelLocator.EditCategory":
                userType = (global::PlanningBudget.Windows.PlanningBudget_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("PlanningBudget.Windows.ViewModel.ViewModelLocator");
                xamlMember = new global::PlanningBudget.Windows.PlanningBudget_Windows_XamlTypeInfo.XamlMember(this, "EditCategory", "PlanningBudget.ViewModels.EditCategoryViewModel");
                xamlMember.Getter = get_2_ViewModelLocator_EditCategory;
                xamlMember.SetIsReadOnly();
                break;
            case "PlanningBudget.Windows.ViewModel.ViewModelLocator.TransactionList":
                userType = (global::PlanningBudget.Windows.PlanningBudget_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("PlanningBudget.Windows.ViewModel.ViewModelLocator");
                xamlMember = new global::PlanningBudget.Windows.PlanningBudget_Windows_XamlTypeInfo.XamlMember(this, "TransactionList", "PlanningBudget.ViewModels.TransactionListViewModel");
                xamlMember.Getter = get_3_ViewModelLocator_TransactionList;
                xamlMember.SetIsReadOnly();
                break;
            case "PlanningBudget.Windows.ViewModel.ViewModelLocator.AddProfile":
                userType = (global::PlanningBudget.Windows.PlanningBudget_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("PlanningBudget.Windows.ViewModel.ViewModelLocator");
                xamlMember = new global::PlanningBudget.Windows.PlanningBudget_Windows_XamlTypeInfo.XamlMember(this, "AddProfile", "PlanningBudget.ViewModels.ProfileViewModel");
                xamlMember.Getter = get_4_ViewModelLocator_AddProfile;
                xamlMember.SetIsReadOnly();
                break;
            case "PlanningBudget.Windows.ViewModel.ViewModelLocator.AddAccount":
                userType = (global::PlanningBudget.Windows.PlanningBudget_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("PlanningBudget.Windows.ViewModel.ViewModelLocator");
                xamlMember = new global::PlanningBudget.Windows.PlanningBudget_Windows_XamlTypeInfo.XamlMember(this, "AddAccount", "PlanningBudget.ViewModels.AddAccountViewModel");
                xamlMember.Getter = get_5_ViewModelLocator_AddAccount;
                xamlMember.SetIsReadOnly();
                break;
            case "PlanningBudget.Windows.ViewModel.ViewModelLocator.AddExpense":
                userType = (global::PlanningBudget.Windows.PlanningBudget_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("PlanningBudget.Windows.ViewModel.ViewModelLocator");
                xamlMember = new global::PlanningBudget.Windows.PlanningBudget_Windows_XamlTypeInfo.XamlMember(this, "AddExpense", "PlanningBudget.ViewModels.AddExpenseViewModel");
                xamlMember.Getter = get_6_ViewModelLocator_AddExpense;
                xamlMember.SetIsReadOnly();
                break;
            case "PlanningBudget.Windows.ViewModel.ViewModelLocator.AddIncome":
                userType = (global::PlanningBudget.Windows.PlanningBudget_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("PlanningBudget.Windows.ViewModel.ViewModelLocator");
                xamlMember = new global::PlanningBudget.Windows.PlanningBudget_Windows_XamlTypeInfo.XamlMember(this, "AddIncome", "PlanningBudget.ViewModels.AddIncomeViewModel");
                xamlMember.Getter = get_7_ViewModelLocator_AddIncome;
                xamlMember.SetIsReadOnly();
                break;
            case "PlanningBudget.Windows.Views.Controls.HeaderControl.Text":
                userType = (global::PlanningBudget.Windows.PlanningBudget_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("PlanningBudget.Windows.Views.Controls.HeaderControl");
                xamlMember = new global::PlanningBudget.Windows.PlanningBudget_Windows_XamlTypeInfo.XamlMember(this, "Text", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_8_HeaderControl_Text;
                xamlMember.Setter = set_8_HeaderControl_Text;
                break;
            case "PlanningBudget.Windows.Views.Controls.HeaderControl.BackCommand":
                userType = (global::PlanningBudget.Windows.PlanningBudget_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("PlanningBudget.Windows.Views.Controls.HeaderControl");
                xamlMember = new global::PlanningBudget.Windows.PlanningBudget_Windows_XamlTypeInfo.XamlMember(this, "BackCommand", "System.Windows.Input.ICommand");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_9_HeaderControl_BackCommand;
                xamlMember.Setter = set_9_HeaderControl_BackCommand;
                break;
            case "PlanningBudget.Windows.Views.Controls.CategoryItemControl.Color":
                userType = (global::PlanningBudget.Windows.PlanningBudget_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("PlanningBudget.Windows.Views.Controls.CategoryItemControl");
                xamlMember = new global::PlanningBudget.Windows.PlanningBudget_Windows_XamlTypeInfo.XamlMember(this, "Color", "Windows.UI.Color");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_10_CategoryItemControl_Color;
                xamlMember.Setter = set_10_CategoryItemControl_Color;
                break;
            case "PlanningBudget.Windows.Views.Controls.CategoryItemControl.BorderColor":
                userType = (global::PlanningBudget.Windows.PlanningBudget_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("PlanningBudget.Windows.Views.Controls.CategoryItemControl");
                xamlMember = new global::PlanningBudget.Windows.PlanningBudget_Windows_XamlTypeInfo.XamlMember(this, "BorderColor", "Windows.UI.Xaml.Media.SolidColorBrush");
                xamlMember.Getter = get_11_CategoryItemControl_BorderColor;
                xamlMember.SetIsReadOnly();
                break;
            case "PlanningBudget.Windows.Views.Controls.CategoryItemControl.Overrun":
                userType = (global::PlanningBudget.Windows.PlanningBudget_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("PlanningBudget.Windows.Views.Controls.CategoryItemControl");
                xamlMember = new global::PlanningBudget.Windows.PlanningBudget_Windows_XamlTypeInfo.XamlMember(this, "Overrun", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_12_CategoryItemControl_Overrun;
                xamlMember.Setter = set_12_CategoryItemControl_Overrun;
                break;
            case "PlanningBudget.Windows.Views.Controls.CategoryItemControl.Label":
                userType = (global::PlanningBudget.Windows.PlanningBudget_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("PlanningBudget.Windows.Views.Controls.CategoryItemControl");
                xamlMember = new global::PlanningBudget.Windows.PlanningBudget_Windows_XamlTypeInfo.XamlMember(this, "Label", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_13_CategoryItemControl_Label;
                xamlMember.Setter = set_13_CategoryItemControl_Label;
                break;
            case "PlanningBudget.Windows.Views.Controls.CategoryItemControl.Percentage":
                userType = (global::PlanningBudget.Windows.PlanningBudget_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("PlanningBudget.Windows.Views.Controls.CategoryItemControl");
                xamlMember = new global::PlanningBudget.Windows.PlanningBudget_Windows_XamlTypeInfo.XamlMember(this, "Percentage", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_14_CategoryItemControl_Percentage;
                xamlMember.Setter = set_14_CategoryItemControl_Percentage;
                break;
            case "PlanningBudget.Windows.Views.Controls.CategoryItemControl.Icon":
                userType = (global::PlanningBudget.Windows.PlanningBudget_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("PlanningBudget.Windows.Views.Controls.CategoryItemControl");
                xamlMember = new global::PlanningBudget.Windows.PlanningBudget_Windows_XamlTypeInfo.XamlMember(this, "Icon", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_15_CategoryItemControl_Icon;
                xamlMember.Setter = set_15_CategoryItemControl_Icon;
                break;
            case "PlanningBudget.Windows.Views.Controls.CategoryItemControl.Value":
                userType = (global::PlanningBudget.Windows.PlanningBudget_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("PlanningBudget.Windows.Views.Controls.CategoryItemControl");
                xamlMember = new global::PlanningBudget.Windows.PlanningBudget_Windows_XamlTypeInfo.XamlMember(this, "Value", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_16_CategoryItemControl_Value;
                xamlMember.Setter = set_16_CategoryItemControl_Value;
                break;
            case "PlanningBudget.Windows.Views.Controls.CategoryItemControl.SecondaryValue":
                userType = (global::PlanningBudget.Windows.PlanningBudget_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("PlanningBudget.Windows.Views.Controls.CategoryItemControl");
                xamlMember = new global::PlanningBudget.Windows.PlanningBudget_Windows_XamlTypeInfo.XamlMember(this, "SecondaryValue", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_17_CategoryItemControl_SecondaryValue;
                xamlMember.Setter = set_17_CategoryItemControl_SecondaryValue;
                break;
            case "PlanningBudget.Windows.Views.Controls.CategoryItemControl.IsAddIcon":
                userType = (global::PlanningBudget.Windows.PlanningBudget_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("PlanningBudget.Windows.Views.Controls.CategoryItemControl");
                xamlMember = new global::PlanningBudget.Windows.PlanningBudget_Windows_XamlTypeInfo.XamlMember(this, "IsAddIcon", "Boolean");
                xamlMember.Getter = get_18_CategoryItemControl_IsAddIcon;
                xamlMember.Setter = set_18_CategoryItemControl_IsAddIcon;
                break;
            case "PlanningBudget.Windows.Views.Controls.CategoryItemControl.AddIconVisibility":
                userType = (global::PlanningBudget.Windows.PlanningBudget_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("PlanningBudget.Windows.Views.Controls.CategoryItemControl");
                xamlMember = new global::PlanningBudget.Windows.PlanningBudget_Windows_XamlTypeInfo.XamlMember(this, "AddIconVisibility", "Windows.UI.Xaml.Visibility");
                xamlMember.Getter = get_19_CategoryItemControl_AddIconVisibility;
                xamlMember.SetIsReadOnly();
                break;
            case "PlanningBudget.Windows.Views.Controls.CategoryItemControl.GeneralIconVisibility":
                userType = (global::PlanningBudget.Windows.PlanningBudget_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("PlanningBudget.Windows.Views.Controls.CategoryItemControl");
                xamlMember = new global::PlanningBudget.Windows.PlanningBudget_Windows_XamlTypeInfo.XamlMember(this, "GeneralIconVisibility", "Windows.UI.Xaml.Visibility");
                xamlMember.Getter = get_20_CategoryItemControl_GeneralIconVisibility;
                xamlMember.SetIsReadOnly();
                break;
            case "PlanningBudget.Windows.Views.Controls.EditCategoryControl.CategoryName":
                userType = (global::PlanningBudget.Windows.PlanningBudget_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("PlanningBudget.Windows.Views.Controls.EditCategoryControl");
                xamlMember = new global::PlanningBudget.Windows.PlanningBudget_Windows_XamlTypeInfo.XamlMember(this, "CategoryName", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_21_EditCategoryControl_CategoryName;
                xamlMember.Setter = set_21_EditCategoryControl_CategoryName;
                break;
            case "PlanningBudget.Windows.Views.Controls.EditCategoryControl.Type":
                userType = (global::PlanningBudget.Windows.PlanningBudget_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("PlanningBudget.Windows.Views.Controls.EditCategoryControl");
                xamlMember = new global::PlanningBudget.Windows.PlanningBudget_Windows_XamlTypeInfo.XamlMember(this, "Type", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_22_EditCategoryControl_Type;
                xamlMember.Setter = set_22_EditCategoryControl_Type;
                break;
            case "PlanningBudget.Windows.Views.Controls.EditCategoryControl.Types":
                userType = (global::PlanningBudget.Windows.PlanningBudget_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("PlanningBudget.Windows.Views.Controls.EditCategoryControl");
                xamlMember = new global::PlanningBudget.Windows.PlanningBudget_Windows_XamlTypeInfo.XamlMember(this, "Types", "System.Collections.ObjectModel.ObservableCollection`1<String>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_23_EditCategoryControl_Types;
                xamlMember.Setter = set_23_EditCategoryControl_Types;
                break;
            case "PlanningBudget.Windows.Views.Controls.EditCategoryControl.IconColor":
                userType = (global::PlanningBudget.Windows.PlanningBudget_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("PlanningBudget.Windows.Views.Controls.EditCategoryControl");
                xamlMember = new global::PlanningBudget.Windows.PlanningBudget_Windows_XamlTypeInfo.XamlMember(this, "IconColor", "Windows.UI.Xaml.Media.SolidColorBrush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_24_EditCategoryControl_IconColor;
                xamlMember.Setter = set_24_EditCategoryControl_IconColor;
                break;
            case "PlanningBudget.Windows.Views.Controls.EditCategoryControl.IconColours":
                userType = (global::PlanningBudget.Windows.PlanningBudget_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("PlanningBudget.Windows.Views.Controls.EditCategoryControl");
                xamlMember = new global::PlanningBudget.Windows.PlanningBudget_Windows_XamlTypeInfo.XamlMember(this, "IconColours", "System.Collections.ObjectModel.ObservableCollection`1<Windows.UI.Xaml.Media.SolidColorBrush>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_25_EditCategoryControl_IconColours;
                xamlMember.Setter = set_25_EditCategoryControl_IconColours;
                break;
            case "PlanningBudget.Windows.Views.Controls.EditCategoryControl.Icon":
                userType = (global::PlanningBudget.Windows.PlanningBudget_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("PlanningBudget.Windows.Views.Controls.EditCategoryControl");
                xamlMember = new global::PlanningBudget.Windows.PlanningBudget_Windows_XamlTypeInfo.XamlMember(this, "Icon", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_26_EditCategoryControl_Icon;
                xamlMember.Setter = set_26_EditCategoryControl_Icon;
                break;
            case "PlanningBudget.Windows.Views.Controls.EditCategoryControl.Icons":
                userType = (global::PlanningBudget.Windows.PlanningBudget_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("PlanningBudget.Windows.Views.Controls.EditCategoryControl");
                xamlMember = new global::PlanningBudget.Windows.PlanningBudget_Windows_XamlTypeInfo.XamlMember(this, "Icons", "System.Collections.ObjectModel.ObservableCollection`1<String>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_27_EditCategoryControl_Icons;
                xamlMember.Setter = set_27_EditCategoryControl_Icons;
                break;
            case "PlanningBudget.Windows.Views.Controls.EditCategoryControl.SaveAndReturnCommand":
                userType = (global::PlanningBudget.Windows.PlanningBudget_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("PlanningBudget.Windows.Views.Controls.EditCategoryControl");
                xamlMember = new global::PlanningBudget.Windows.PlanningBudget_Windows_XamlTypeInfo.XamlMember(this, "SaveAndReturnCommand", "System.Windows.Input.ICommand");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_28_EditCategoryControl_SaveAndReturnCommand;
                xamlMember.Setter = set_28_EditCategoryControl_SaveAndReturnCommand;
                break;
            case "PlanningBudget.Windows.Views.Controls.EditCategoryControl.SaveAndContinueCommand":
                userType = (global::PlanningBudget.Windows.PlanningBudget_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("PlanningBudget.Windows.Views.Controls.EditCategoryControl");
                xamlMember = new global::PlanningBudget.Windows.PlanningBudget_Windows_XamlTypeInfo.XamlMember(this, "SaveAndContinueCommand", "System.Windows.Input.ICommand");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_29_EditCategoryControl_SaveAndContinueCommand;
                xamlMember.Setter = set_29_EditCategoryControl_SaveAndContinueCommand;
                break;
            case "PlanningBudget.Windows.Views.Controls.EditCategoryControl.IsAdding":
                userType = (global::PlanningBudget.Windows.PlanningBudget_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("PlanningBudget.Windows.Views.Controls.EditCategoryControl");
                xamlMember = new global::PlanningBudget.Windows.PlanningBudget_Windows_XamlTypeInfo.XamlMember(this, "IsAdding", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_30_EditCategoryControl_IsAdding;
                xamlMember.Setter = set_30_EditCategoryControl_IsAdding;
                break;
            case "PlanningBudget.Windows.Views.Controls.EditCategoryControl.ShowSaveAndAdd":
                userType = (global::PlanningBudget.Windows.PlanningBudget_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("PlanningBudget.Windows.Views.Controls.EditCategoryControl");
                xamlMember = new global::PlanningBudget.Windows.PlanningBudget_Windows_XamlTypeInfo.XamlMember(this, "ShowSaveAndAdd", "Windows.UI.Xaml.Visibility");
                xamlMember.Getter = get_31_EditCategoryControl_ShowSaveAndAdd;
                xamlMember.SetIsReadOnly();
                break;
            case "PlanningBudget.Windows.Views.Controls.EditCategoryControl.SaveButtonColumnSpan":
                userType = (global::PlanningBudget.Windows.PlanningBudget_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("PlanningBudget.Windows.Views.Controls.EditCategoryControl");
                xamlMember = new global::PlanningBudget.Windows.PlanningBudget_Windows_XamlTypeInfo.XamlMember(this, "SaveButtonColumnSpan", "Int32");
                xamlMember.Getter = get_32_EditCategoryControl_SaveButtonColumnSpan;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.Xaml.Interactivity.Interaction.Behaviors":
                userType = (global::PlanningBudget.Windows.PlanningBudget_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactivity.Interaction");
                xamlMember = new global::PlanningBudget.Windows.PlanningBudget_Windows_XamlTypeInfo.XamlMember(this, "Behaviors", "Microsoft.Xaml.Interactivity.BehaviorCollection");
                xamlMember.SetTargetTypeName("Windows.UI.Xaml.DependencyObject");
                xamlMember.SetIsAttachable();
                xamlMember.Getter = get_33_Interaction_Behaviors;
                xamlMember.Setter = set_33_Interaction_Behaviors;
                break;
            case "Microsoft.Xaml.Interactions.Core.DataTriggerBehavior.Actions":
                userType = (global::PlanningBudget.Windows.PlanningBudget_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactions.Core.DataTriggerBehavior");
                xamlMember = new global::PlanningBudget.Windows.PlanningBudget_Windows_XamlTypeInfo.XamlMember(this, "Actions", "Microsoft.Xaml.Interactivity.ActionCollection");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_34_DataTriggerBehavior_Actions;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.Xaml.Interactions.Core.DataTriggerBehavior.Binding":
                userType = (global::PlanningBudget.Windows.PlanningBudget_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactions.Core.DataTriggerBehavior");
                xamlMember = new global::PlanningBudget.Windows.PlanningBudget_Windows_XamlTypeInfo.XamlMember(this, "Binding", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_35_DataTriggerBehavior_Binding;
                xamlMember.Setter = set_35_DataTriggerBehavior_Binding;
                break;
            case "Microsoft.Xaml.Interactions.Core.DataTriggerBehavior.ComparisonCondition":
                userType = (global::PlanningBudget.Windows.PlanningBudget_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactions.Core.DataTriggerBehavior");
                xamlMember = new global::PlanningBudget.Windows.PlanningBudget_Windows_XamlTypeInfo.XamlMember(this, "ComparisonCondition", "Microsoft.Xaml.Interactions.Core.ComparisonConditionType");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_36_DataTriggerBehavior_ComparisonCondition;
                xamlMember.Setter = set_36_DataTriggerBehavior_ComparisonCondition;
                break;
            case "Microsoft.Xaml.Interactions.Core.DataTriggerBehavior.Value":
                userType = (global::PlanningBudget.Windows.PlanningBudget_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactions.Core.DataTriggerBehavior");
                xamlMember = new global::PlanningBudget.Windows.PlanningBudget_Windows_XamlTypeInfo.XamlMember(this, "Value", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_37_DataTriggerBehavior_Value;
                xamlMember.Setter = set_37_DataTriggerBehavior_Value;
                break;
            case "Microsoft.Xaml.Interactions.Core.DataTriggerBehavior.AssociatedObject":
                userType = (global::PlanningBudget.Windows.PlanningBudget_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactions.Core.DataTriggerBehavior");
                xamlMember = new global::PlanningBudget.Windows.PlanningBudget_Windows_XamlTypeInfo.XamlMember(this, "AssociatedObject", "Windows.UI.Xaml.DependencyObject");
                xamlMember.Getter = get_38_DataTriggerBehavior_AssociatedObject;
                xamlMember.SetIsReadOnly();
                break;
            case "PlanningBudget.Windows.Views.ItemClickCommand.Command":
                userType = (global::PlanningBudget.Windows.PlanningBudget_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("PlanningBudget.Windows.Views.ItemClickCommand");
                xamlMember = new global::PlanningBudget.Windows.PlanningBudget_Windows_XamlTypeInfo.XamlMember(this, "Command", "System.Windows.Input.ICommand");
                xamlMember.SetTargetTypeName("Windows.UI.Xaml.DependencyObject");
                xamlMember.SetIsAttachable();
                xamlMember.Getter = get_39_ItemClickCommand_Command;
                xamlMember.Setter = set_39_ItemClickCommand_Command;
                break;
            }
            return xamlMember;
        }
    }

    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks", "4.0.0.0")]    
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlSystemBaseType : global::Windows.UI.Xaml.Markup.IXamlType
    {
        string _fullName;
        global::System.Type _underlyingType;

        public XamlSystemBaseType(string fullName, global::System.Type underlyingType)
        {
            _fullName = fullName;
            _underlyingType = underlyingType;
        }

        public string FullName { get { return _fullName; } }

        public global::System.Type UnderlyingType
        {
            get
            {
                return _underlyingType;
            }
        }

        virtual public global::Windows.UI.Xaml.Markup.IXamlType BaseType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlMember ContentProperty { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlMember GetMember(string name) { throw new global::System.NotImplementedException(); }
        virtual public bool IsArray { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsCollection { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsConstructible { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsDictionary { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsMarkupExtension { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsBindable { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsReturnTypeStub { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsLocalType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlType ItemType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlType KeyType { get { throw new global::System.NotImplementedException(); } }
        virtual public object ActivateInstance() { throw new global::System.NotImplementedException(); }
        virtual public void AddToMap(object instance, object key, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void AddToVector(object instance, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void RunInitializer()   { throw new global::System.NotImplementedException(); }
        virtual public object CreateFromString(string input)   { throw new global::System.NotImplementedException(); }
    }
    
    internal delegate object Activator();
    internal delegate void AddToCollection(object instance, object item);
    internal delegate void AddToDictionary(object instance, object key, object item);

    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks", "4.0.0.0")]    
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlUserType : global::PlanningBudget.Windows.PlanningBudget_Windows_XamlTypeInfo.XamlSystemBaseType
    {
        global::PlanningBudget.Windows.PlanningBudget_Windows_XamlTypeInfo.XamlTypeInfoProvider _provider;
        global::Windows.UI.Xaml.Markup.IXamlType _baseType;
        bool _isArray;
        bool _isMarkupExtension;
        bool _isBindable;
        bool _isReturnTypeStub;
        bool _isLocalType;

        string _contentPropertyName;
        string _itemTypeName;
        string _keyTypeName;
        global::System.Collections.Generic.Dictionary<string, string> _memberNames;
        global::System.Collections.Generic.Dictionary<string, object> _enumValues;

        public XamlUserType(global::PlanningBudget.Windows.PlanningBudget_Windows_XamlTypeInfo.XamlTypeInfoProvider provider, string fullName, global::System.Type fullType, global::Windows.UI.Xaml.Markup.IXamlType baseType)
            :base(fullName, fullType)
        {
            _provider = provider;
            _baseType = baseType;
        }

        // --- Interface methods ----

        override public global::Windows.UI.Xaml.Markup.IXamlType BaseType { get { return _baseType; } }
        override public bool IsArray { get { return _isArray; } }
        override public bool IsCollection { get { return (CollectionAdd != null); } }
        override public bool IsConstructible { get { return (Activator != null); } }
        override public bool IsDictionary { get { return (DictionaryAdd != null); } }
        override public bool IsMarkupExtension { get { return _isMarkupExtension; } }
        override public bool IsBindable { get { return _isBindable; } }
        override public bool IsReturnTypeStub { get { return _isReturnTypeStub; } }
        override public bool IsLocalType { get { return _isLocalType; } }

        override public global::Windows.UI.Xaml.Markup.IXamlMember ContentProperty
        {
            get { return _provider.GetMemberByLongName(_contentPropertyName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlType ItemType
        {
            get { return _provider.GetXamlTypeByName(_itemTypeName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlType KeyType
        {
            get { return _provider.GetXamlTypeByName(_keyTypeName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlMember GetMember(string name)
        {
            if (_memberNames == null)
            {
                return null;
            }
            string longName;
            if (_memberNames.TryGetValue(name, out longName))
            {
                return _provider.GetMemberByLongName(longName);
            }
            return null;
        }

        override public object ActivateInstance()
        {
            return Activator(); 
        }

        override public void AddToMap(object instance, object key, object item) 
        {
            DictionaryAdd(instance, key, item);
        }

        override public void AddToVector(object instance, object item)
        {
            CollectionAdd(instance, item);
        }

        override public void RunInitializer() 
        {
            System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(UnderlyingType.TypeHandle);
        }

        override public object CreateFromString(string input)
        {
            if (_enumValues != null)
            {
                int value = 0;

                string[] valueParts = input.Split(',');

                foreach (string valuePart in valueParts) 
                {
                    object partValue;
                    int enumFieldValue = 0;
                    try
                    {
                        if (_enumValues.TryGetValue(valuePart.Trim(), out partValue))
                        {
                            enumFieldValue = global::System.Convert.ToInt32(partValue);
                        }
                        else
                        {
                            try
                            {
                                enumFieldValue = global::System.Convert.ToInt32(valuePart.Trim());
                            }
                            catch( global::System.FormatException )
                            {
                                foreach( string key in _enumValues.Keys )
                                {
                                    if( string.Compare(valuePart.Trim(), key, global::System.StringComparison.OrdinalIgnoreCase) == 0 )
                                    {
                                        if( _enumValues.TryGetValue(key.Trim(), out partValue) )
                                        {
                                            enumFieldValue = global::System.Convert.ToInt32(partValue);
                                            break;
                                        }
                                    }
                                }
                            }
                        }
                        value |= enumFieldValue; 
                    }
                    catch( global::System.FormatException )
                    {
                        throw new global::System.ArgumentException(input, FullName);
                    }
                }

                return value; 
            }
            throw new global::System.ArgumentException(input, FullName);
        }

        // --- End of Interface methods

        public Activator Activator { get; set; }
        public AddToCollection CollectionAdd { get; set; }
        public AddToDictionary DictionaryAdd { get; set; }

        public void SetContentPropertyName(string contentPropertyName)
        {
            _contentPropertyName = contentPropertyName;
        }

        public void SetIsArray()
        {
            _isArray = true; 
        }

        public void SetIsMarkupExtension()
        {
            _isMarkupExtension = true;
        }

        public void SetIsBindable()
        {
            _isBindable = true;
        }

        public void SetIsReturnTypeStub()
        {
            _isReturnTypeStub = true;
        }

        public void SetIsLocalType()
        {
            _isLocalType = true;
        }

        public void SetItemTypeName(string itemTypeName)
        {
            _itemTypeName = itemTypeName;
        }

        public void SetKeyTypeName(string keyTypeName)
        {
            _keyTypeName = keyTypeName;
        }

        public void AddMemberName(string shortName)
        {
            if(_memberNames == null)
            {
                _memberNames =  new global::System.Collections.Generic.Dictionary<string,string>();
            }
            _memberNames.Add(shortName, FullName + "." + shortName);
        }

        public void AddEnumValue(string name, object value)
        {
            if (_enumValues == null)
            {
                _enumValues = new global::System.Collections.Generic.Dictionary<string, object>();
            }
            _enumValues.Add(name, value);
        }
    }

    internal delegate object Getter(object instance);
    internal delegate void Setter(object instance, object value);

    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks", "4.0.0.0")]    
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlMember : global::Windows.UI.Xaml.Markup.IXamlMember
    {
        global::PlanningBudget.Windows.PlanningBudget_Windows_XamlTypeInfo.XamlTypeInfoProvider _provider;
        string _name;
        bool _isAttachable;
        bool _isDependencyProperty;
        bool _isReadOnly;

        string _typeName;
        string _targetTypeName;

        public XamlMember(global::PlanningBudget.Windows.PlanningBudget_Windows_XamlTypeInfo.XamlTypeInfoProvider provider, string name, string typeName)
        {
            _name = name;
            _typeName = typeName;
            _provider = provider;
        }

        public string Name { get { return _name; } }

        public global::Windows.UI.Xaml.Markup.IXamlType Type
        {
            get { return _provider.GetXamlTypeByName(_typeName); }
        }

        public void SetTargetTypeName(string targetTypeName)
        {
            _targetTypeName = targetTypeName;
        }
        public global::Windows.UI.Xaml.Markup.IXamlType TargetType
        {
            get { return _provider.GetXamlTypeByName(_targetTypeName); }
        }

        public void SetIsAttachable() { _isAttachable = true; }
        public bool IsAttachable { get { return _isAttachable; } }

        public void SetIsDependencyProperty() { _isDependencyProperty = true; }
        public bool IsDependencyProperty { get { return _isDependencyProperty; } }

        public void SetIsReadOnly() { _isReadOnly = true; }
        public bool IsReadOnly { get { return _isReadOnly; } }

        public Getter Getter { get; set; }
        public object GetValue(object instance)
        {
            if (Getter != null)
                return Getter(instance);
            else
                throw new global::System.InvalidOperationException("GetValue");
        }

        public Setter Setter { get; set; }
        public void SetValue(object instance, object value)
        {
            if (Setter != null)
                Setter(instance, value);
            else
                throw new global::System.InvalidOperationException("SetValue");
        }
    }
}



